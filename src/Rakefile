# Directories =======

DIST = "../dist"

# Compilers =======

CC = "gcc"
CFLAGS = "-Wall"

OCAMLOPT = "ocamlopt"
OCAMLC = "ocamlc"
OCAMLFIND = "ocamlfind"

OCAMLLEX = "ocamllex"
OCAMLYACC = "menhir"

LIBS = ""
SOURCES = "ast.ml parser.mli parser.ml lexer.ml parse_test.ml" 

PACKAGE = if LIBS == "" then "" else "-linkpkg -packge #{LIBS}" end
OCAMLFIND_FLAGS = "#{PACKAGE}"

# Files =======

# Tasks =====================================

desc "default"
task :default do
  compileAll
  cleanGarbages
end

task :clean do 
  cleanAll
end

def compileAll
  generateParser
  batchCompile(SOURCES)
end

def cleanAll
  allGabages =
  ["*.cmi *.cmx *.mli *.o",
   "*.extract_type parser_temp.ml parser.ml lexer.ml #{DIST}/*",
   "*.automaton *.conflicts"]
  sh "rm -rf #{allGabages.join(' ')}"
end

def cleanGarbages
  gabages =
  ["*.cmi *.cmx *.mli *.o",
   "*.extract_type parser_temp.ml lexer.mli",
   "*.automaton *.conflicts"]
  sh "rm -rf #{gabages.join(' ')}"
end

def batchCompile(sources)
  sh "#{OCAMLFIND} #{OCAMLOPT} -o #{DIST}/hien #{OCAMLFIND_FLAGS} #{sources}"
end

def generateParser
  sh "#{OCAMLLEX} lexer.mll"
  sh "#{OCAMLYACC} --trace parser.mly"
end
