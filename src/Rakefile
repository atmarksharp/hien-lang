# Directories =======

DIST = "../dist"

# Compilers =======

CC = "gcc"
CFLAGS = "-Wall"

OCAMLOPT = "ocamlopt"
OCAMLC = "ocamlc"
OCAMLFIND = "ocamlfind"
DYPGEN = "dypgen"

LIBS = "dyp"
SOURCES = "ast.ml parser.ml parse_test.ml" 

OCAMLFIND_FLAGS = "-linkpkg -package #{LIBS}"

# Files =======

# Tasks =====================================

desc "default"
task :default do
  compileAll
  cleanGarbages
end

task :clean do 
  cleanAll
end

def compileAll
  generateParser
  batchCompile(SOURCES)
end

def cleanAll
  s =
  ["rm -rf *.cmi *.cmx *.o",
   "*.extract_type parser_temp.ml parser.ml lexer.mli #{DIST}/*"]
  sh "#{s.join(' ')}"
end

def cleanGarbages
  s =
  ["rm -rf *.cmi *.cmx *.o",
   "*.extract_type parser_temp.ml lexer.mli"]
  sh "#{s.join(' ')}"
end

def batchCompile(sources)
  sh "#{OCAMLFIND} #{OCAMLOPT} -o #{DIST}/hien #{OCAMLFIND_FLAGS} #{sources}"
end

def generateParser
  sh "#{DYPGEN} --no-mli parser.dyp"
end
